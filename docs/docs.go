// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ai_arts/api/:id/bind": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "summary": "bind dataset",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error\"  \"code\": 30000, \"already bind",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/:id/unbind": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "summary": "unbind dataset",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found\"  \"code\": 30000, \"no bind",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/datasets": {
            "get": {
                "description": "list all datasets for user",
                "produces": [
                    "application/json"
                ],
                "summary": "list all datasets for user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number, from 1",
                        "name": "pageNum",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects": {
            "get": {
                "description": "get projects of data-platform",
                "produces": [
                    "application/json"
                ],
                "summary": "list projects",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number, from 1",
                        "name": "pageNum",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            },
            "post": {
                "description": "add project of data-platform",
                "produces": [
                    "application/json"
                ],
                "summary": "add project",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects/:projectId": {
            "delete": {
                "description": "delete project of data-platform",
                "produces": [
                    "application/json"
                ],
                "summary": "delete project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            },
            "patch": {
                "description": "update project of data-platform",
                "produces": [
                    "application/json"
                ],
                "summary": "update projects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects/:projectId/datasets": {
            "get": {
                "description": "list datasets of data-platform project",
                "produces": [
                    "application/json"
                ],
                "summary": "list datasets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page number, from 1",
                        "name": "pageNum",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            },
            "post": {
                "description": "add dataset for data-platform project",
                "produces": [
                    "application/json"
                ],
                "summary": "add dataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete dataset info for data-platform project",
                "produces": [
                    "application/json"
                ],
                "summary": "delete dataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects/:projectId/datasets/:dataSetId": {
            "get": {
                "description": "get dataset info for data-platform project",
                "produces": [
                    "application/json"
                ],
                "summary": "get dataset info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            },
            "patch": {
                "description": "update dataset info for data-platform project",
                "produces": [
                    "application/json"
                ],
                "summary": "update dataset info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects/:projectId/datasets/:dataSetId/ConvertDataFormat": {
            "post": {
                "description": "convert a dataset to specific format",
                "produces": [
                    "application/json"
                ],
                "summary": "convert a dataset to specific format",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "dataset type,like image",
                        "name": "type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "convert to specific format",
                        "name": "target",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects/:projectId/datasets/:dataSetId/ConvertSupportFormat": {
            "get": {
                "description": "current support convert's specific format",
                "produces": [
                    "application/json"
                ],
                "summary": "current support convert's specific format",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects/:projectId/datasets/:dataSetId/tasks": {
            "get": {
                "description": "get dataset tasks for data-platform project",
                "produces": [
                    "application/json"
                ],
                "summary": "get dataset tasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page number, from 1",
                        "name": "pageNum",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects/:projectId/datasets/:dataSetId/tasks/annotations/:taskId": {
            "get": {
                "description": "get dataset one task detail for data-platform project",
                "produces": [
                    "application/json"
                ],
                "summary": "get dataset one task detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "current task id",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            },
            "post": {
                "description": "commit label data to one task",
                "produces": [
                    "application/json"
                ],
                "summary": "commit label data to one task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "current task id",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects/:projectId/datasets/:dataSetId/tasks/labels": {
            "get": {
                "description": "get dataset all labels",
                "produces": [
                    "application/json"
                ],
                "summary": "get dataset all labels",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects/:projectId/datasets/:dataSetId/tasks/next/:taskId": {
            "get": {
                "description": "get dataset next task id for data-platform project",
                "produces": [
                    "application/json"
                ],
                "summary": "get dataset next task id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "current task id",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects/:projectId/datasets/:dataSetId/tasks/previous/:taskId": {
            "get": {
                "description": "get dataset previous task id for data-platform project",
                "produces": [
                    "application/json"
                ],
                "summary": "get dataset previous task id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "current task id",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/codes": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get all codes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "pageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "size per page",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespAllGetCodeEnv"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "create CodeEnv",
                "parameters": [
                    {
                        "description": "params",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.CreateCodeEnvReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespCreateCodeEnv"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/codes/:id": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "delete CodeEnv",
                "parameters": [
                    {
                        "type": "string",
                        "description": "codeEnv id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespDeleteCodeEnv"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/codes/:id/jupyter": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get CodeEnv jupyter path",
                "parameters": [
                    {
                        "type": "string",
                        "description": "code id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetCodeEnvJupyter"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/common/resource": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get available resource",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetResource"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/datasets": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "list datasets",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number, from 1",
                        "name": "pageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetDatasets"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "create dataset",
                "parameters": [
                    {
                        "description": "json body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.createDatasetReq"
                        }
                    },
                    {
                        "description": "dataset description",
                        "name": "description",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "dataset storage path",
                        "name": "path",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/datasets/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get dataset by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "dataset id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetDataset"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "update dataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dataset description",
                        "name": "description",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "delete dataset by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "dataset id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/files/download/dataset/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "download dataset by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "model id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/files/download/model/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "download model by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "model id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/files/upload/dataset": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "upload dataset file",
                "parameters": [
                    {
                        "description": "upload file key 'data'",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.UploadFileResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/files/upload/model": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "upload model file, not implemented yet",
                "parameters": [
                    {
                        "description": "upload file key 'data'",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/inferences/GetAllDevice": {
            "get": {
                "description": "get all device type detail",
                "produces": [
                    "application/json"
                ],
                "summary": "get all device type detail",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/inferences/GetAllSupportInference": {
            "get": {
                "description": "list inference jobs",
                "produces": [
                    "application/json"
                ],
                "summary": "get all support inference framework\\device",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/inferences/GetJobDetail": {
            "get": {
                "description": "get inference job detail",
                "produces": [
                    "application/json"
                ],
                "summary": "get inference job detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inference job Id ",
                        "name": "jobId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/inferences/GetJobLog": {
            "get": {
                "description": "get inference job log",
                "produces": [
                    "application/json"
                ],
                "summary": "get inference job log",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inference job Id ",
                        "name": "jobId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/inferences/GetJobStatus": {
            "get": {
                "description": "get inference job status",
                "produces": [
                    "application/json"
                ],
                "summary": "get inference job status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inference job Id ",
                        "name": "jobId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/inferences/Infer": {
            "post": {
                "description": "Infer a picture using a running inference job",
                "produces": [
                    "application/json"
                ],
                "summary": "Infer a picture using a running inference job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inference job Id ",
                        "name": "jobId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "picture upload to infer",
                        "name": "image",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/inferences/KillJob": {
            "get": {
                "description": "kill a running inference job",
                "produces": [
                    "application/json"
                ],
                "summary": "kill a running inference job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inference job Id ",
                        "name": "jobId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/inferences/ListInferenceJob": {
            "get": {
                "description": "list inference jobs",
                "produces": [
                    "application/json"
                ],
                "summary": "list inference jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "which virtual cluster",
                        "name": "vcName",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page number, from 1",
                        "name": "pageNum",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/inferences/PostInferenceJob": {
            "post": {
                "description": "submit a inference job",
                "produces": [
                    "application/json"
                ],
                "summary": "submit a inference job",
                "parameters": [
                    {
                        "description": "json body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PostInference"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/models": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "list models",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number, from 1",
                        "name": "pageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "name of model",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetModelsets"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "create model",
                "parameters": [
                    {
                        "description": "json body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.createModelsetReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/models/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get model by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "model id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetModelset"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "update model",
                "parameters": [
                    {
                        "type": "string",
                        "description": "model description",
                        "name": "description",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "delete model by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "model id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/trainings": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get all trainings",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "pageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "size per page",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "job status, 4=running",
                        "name": "JobStatus",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetAllTraining"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "create Training",
                "parameters": [
                    {
                        "description": "params",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.CreateTrainingReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespCreateTraining"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/trainings/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get specific training",
                "parameters": [
                    {
                        "description": "params",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.GetTrainingReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetTraining"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "delete one training",
                "parameters": [
                    {
                        "description": "params",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.DeleteTrainingReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespDeleteTraining"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/trainings/log/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get specific training",
                "parameters": [
                    {
                        "description": "params",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.GetTrainingReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetTrainingLog"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/version-info": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "acquire version infomation, including the current version and dated ones",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetDatasets"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CodeEnvItem": {
            "type": "object",
            "required": [
                "engine",
                "name",
                "status"
            ],
            "properties": {
                "JupyterUrl": {
                    "type": "string"
                },
                "codePath": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "deviceNum": {
                    "type": "integer"
                },
                "deviceType": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.Dataset": {
            "type": "object",
            "properties": {
                "binds": {
                    "description": "存储绑定信息\nplantform_id,plantform_id",
                    "type": "string"
                },
                "createdAt": {
                    "type": "object",
                    "$ref": "#/definitions/models.UnixTime"
                },
                "creator": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "object",
                    "$ref": "#/definitions/models.UnixTime"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "object",
                    "$ref": "#/definitions/models.UnixTime"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.DeviceItem": {
            "type": "object",
            "properties": {
                "avail": {
                    "type": "integer"
                },
                "deviceType": {
                    "type": "string"
                }
            }
        },
        "models.EndpointWrapper": {
            "type": "object",
            "properties": {
                "accessPoint": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.JobLog": {
            "type": "object",
            "properties": {
                "cursor": {
                    "type": "string"
                },
                "log": {
                    "type": "string"
                }
            }
        },
        "models.Modelset": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "object",
                    "$ref": "#/definitions/models.UnixTime"
                },
                "creator": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "object",
                    "$ref": "#/definitions/models.UnixTime"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "jobId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "object",
                    "$ref": "#/definitions/models.UnixTime"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.PostInference": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "device": {
                    "type": "string"
                },
                "framework": {
                    "type": "string"
                },
                "gpuType": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "jobName": {
                    "type": "string"
                },
                "model_base_path": {
                    "type": "string"
                },
                "resourcegpu": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "vcName": {
                    "type": "string"
                }
            }
        },
        "models.Training": {
            "type": "object",
            "properties": {
                "codePath": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "datasetPath": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "deviceNum": {
                    "type": "integer"
                },
                "deviceType": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "outputPath": {
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "startupFile": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.UnixTime": {
            "type": "object"
        },
        "routers.APIException": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespAllGetCodeEnv": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.GetAllCodeEnvRsp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespCreateCodeEnv": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.CreateCodeEnvRsp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespCreateTraining": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.CreateTrainingRsp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespDeleteCodeEnv": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.DeleteCodeEnvRsp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespDeleteTraining": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.DeleteTrainingRsp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespGetAllTraining": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.GetAllTrainingRsp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespGetCodeEnvJupyter": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/models.EndpointWrapper"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespGetDataset": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.GetDatasetResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespGetDatasets": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.GetDatasetsResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespGetModelset": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.GetModelsetResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespGetModelsets": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.GetModelsetsResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespGetResource": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.GetResourceRsp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespGetTraining": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.GetTrainingRsp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespGetTrainingLog": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/models.JobLog"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.CreateCodeEnvReq": {
            "type": "object",
            "required": [
                "engine",
                "name"
            ],
            "properties": {
                "codePath": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "deviceNum": {
                    "type": "integer"
                },
                "deviceType": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "routers.CreateCodeEnvRsp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "routers.CreateTrainingReq": {
            "type": "object",
            "properties": {
                "codePath": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "datasetPath": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "deviceNum": {
                    "type": "integer"
                },
                "deviceType": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "outputPath": {
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "startupFile": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "routers.CreateTrainingRsp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "routers.DeleteCodeEnvRsp": {
            "type": "object"
        },
        "routers.DeleteTrainingReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "routers.DeleteTrainingRsp": {
            "type": "object"
        },
        "routers.GetAllCodeEnvRsp": {
            "type": "object",
            "properties": {
                "CodeEnvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CodeEnvItem"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "routers.GetAllTrainingRsp": {
            "type": "object",
            "properties": {
                "Trainings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Training"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "routers.GetDatasetResp": {
            "type": "object",
            "properties": {
                "dataset": {
                    "type": "object",
                    "$ref": "#/definitions/models.Dataset"
                }
            }
        },
        "routers.GetDatasetsResp": {
            "type": "object",
            "properties": {
                "datasets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Dataset"
                    }
                },
                "pageNum": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "routers.GetModelsetResp": {
            "type": "object",
            "properties": {
                "model": {
                    "type": "object",
                    "$ref": "#/definitions/models.Modelset"
                }
            }
        },
        "routers.GetModelsetsResp": {
            "type": "object",
            "properties": {
                "models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Modelset"
                    }
                },
                "pageNum": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "routers.GetResourceRsp": {
            "type": "object",
            "properties": {
                "aiFrameworks": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "codePathPrefix": {
                    "type": "string"
                },
                "deviceList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DeviceItem"
                    }
                }
            }
        },
        "routers.GetTrainingReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "routers.GetTrainingRsp": {
            "type": "object",
            "properties": {
                "codePath": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "datasetPath": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "deviceNum": {
                    "type": "integer"
                },
                "deviceType": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "outputPath": {
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "startupFile": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "routers.UploadFileResp": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string"
                }
            }
        },
        "routers.createDatasetReq": {
            "type": "object",
            "required": [
                "description",
                "name",
                "path"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "routers.createModelsetReq": {
            "type": "object",
            "required": [
                "jobId",
                "name",
                "path"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "jobId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
