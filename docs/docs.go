// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ai_arts/api/annotations/datasets": {
            "get": {
                "description": "list all datasets for user",
                "produces": [
                    "application/json"
                ],
                "summary": "list all datasets for user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number, from 1",
                        "name": "pageNum",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects": {
            "get": {
                "description": "get projects of data-platform",
                "produces": [
                    "application/json"
                ],
                "summary": "list projects",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number, from 1",
                        "name": "pageNum",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "select by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            },
            "post": {
                "description": "add project of data-platform",
                "produces": [
                    "application/json"
                ],
                "summary": "add project",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects/:projectId": {
            "delete": {
                "description": "delete project of data-platform",
                "produces": [
                    "application/json"
                ],
                "summary": "delete project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            },
            "patch": {
                "description": "update project of data-platform",
                "produces": [
                    "application/json"
                ],
                "summary": "update projects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects/:projectId/datasets": {
            "get": {
                "description": "list datasets of data-platform project",
                "produces": [
                    "application/json"
                ],
                "summary": "list datasets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page number, from 1",
                        "name": "pageNum",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "select by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            },
            "post": {
                "description": "add dataset for data-platform project",
                "produces": [
                    "application/json"
                ],
                "summary": "add dataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete dataset info for data-platform project",
                "produces": [
                    "application/json"
                ],
                "summary": "delete dataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects/:projectId/datasets/:dataSetId": {
            "get": {
                "description": "get dataset info for data-platform project",
                "produces": [
                    "application/json"
                ],
                "summary": "get dataset info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            },
            "patch": {
                "description": "update dataset info for data-platform project",
                "produces": [
                    "application/json"
                ],
                "summary": "update dataset info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects/:projectId/datasets/:dataSetId/ConvertDataFormat": {
            "post": {
                "description": "convert a dataset to specific format",
                "produces": [
                    "application/json"
                ],
                "summary": "convert a dataset to specific format",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "dataset type,like image",
                        "name": "type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "convert to specific format",
                        "name": "target",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects/:projectId/datasets/:dataSetId/ConvertSupportFormat": {
            "get": {
                "description": "current support convert's specific format",
                "produces": [
                    "application/json"
                ],
                "summary": "current support convert's specific format",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects/:projectId/datasets/:dataSetId/tasks": {
            "get": {
                "description": "get dataset tasks for data-platform project",
                "produces": [
                    "application/json"
                ],
                "summary": "get dataset tasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page number, from 1",
                        "name": "pageNum",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects/:projectId/datasets/:dataSetId/tasks/annotations/:taskId": {
            "get": {
                "description": "get dataset one task detail for data-platform project",
                "produces": [
                    "application/json"
                ],
                "summary": "get dataset one task detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "current task id",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            },
            "post": {
                "description": "commit label data to one task",
                "produces": [
                    "application/json"
                ],
                "summary": "commit label data to one task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "current task id",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects/:projectId/datasets/:dataSetId/tasks/labels": {
            "get": {
                "description": "get dataset all labels",
                "produces": [
                    "application/json"
                ],
                "summary": "get dataset all labels",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects/:projectId/datasets/:dataSetId/tasks/next/:taskId": {
            "get": {
                "description": "get dataset next task id for data-platform project",
                "produces": [
                    "application/json"
                ],
                "summary": "get dataset next task id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "current task id",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/annotations/projects/:projectId/datasets/:dataSetId/tasks/previous/:taskId": {
            "get": {
                "description": "get dataset previous task id for data-platform project",
                "produces": [
                    "application/json"
                ],
                "summary": "get dataset previous task id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dataSet id",
                        "name": "dataSetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "current task id",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/codes": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get all codes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "pageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "size per page",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "job status. get all jobs if it is all",
                        "name": "status",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the keyword of search",
                        "name": "searchWord",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespAllGetCodeEnv"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "create CodeEnv",
                "parameters": [
                    {
                        "description": "params",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.CreateCodeEnvReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespCreateCodeEnv"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/codes/:id": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "delete CodeEnv",
                "parameters": [
                    {
                        "type": "string",
                        "description": "codeEnv id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespDeleteCodeEnv"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/codes/:id/jupyter": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get CodeEnv jupyter path",
                "parameters": [
                    {
                        "type": "string",
                        "description": "code id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetCodeEnvJupyter"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/codes/upload": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "upload code",
                "parameters": [
                    {
                        "description": "upload file key 'data'",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespCreateCodeEnv"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/common/job/summary": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get job summary",
                "parameters": [
                    {
                        "description": "params",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.GetJobSummaryReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetResource"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/common/resource": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get available resource",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetResource"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/datasets": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "list datasets",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number, from 1",
                        "name": "pageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dataset name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "dataset status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetDatasets"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "create dataset",
                "parameters": [
                    {
                        "description": "json body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.createDatasetReq"
                        }
                    },
                    {
                        "description": "dataset description",
                        "name": "description",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "dataset storage path",
                        "name": "path",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "dataset name",
                        "name": "name",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "dataset auth",
                        "name": "IsPrivate",
                        "in": "body",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/datasets/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get dataset by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "dataset id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetDataset"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "update dataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dataset description",
                        "name": "description",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "delete dataset by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "dataset id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "30010": {
                        "description": "dataset is still using",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/datasets/:id/bind": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "bind dataset",
                "parameters": [
                    {
                        "description": "bind platform's name",
                        "name": "platform",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "bind platform's id",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/datasets/:id/unbind": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "unbind dataset",
                "parameters": [
                    {
                        "description": "bind platform's name",
                        "name": "platform",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "bind platform's id",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/edge_inferences": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get dataset by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number, from 1",
                        "name": "pageNum",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "job name",
                        "name": "jobName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "model conversion type",
                        "name": "modelconversionType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by item",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "desc or asc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespLsEdgeInferences"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "update dataset",
                "parameters": [
                    {
                        "description": "json body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.createEdgeInferenceReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespCreateEdgeInference"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/edge_inferences/conversion_types": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get dataset by id",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetConvTypes"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/edge_inferences/fdinfo": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get dataset by id",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetFDInfo"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "update dataset",
                "parameters": [
                    {
                        "description": "json body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.setFDInfoReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/edge_inferences/push/:jobId": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "update dataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "job id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/files/download/dataset/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "download dataset by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "model id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/files/download/model/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "download model by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "model id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/files/upload/model": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "upload model file, not implemented yet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "upload file key 'data'",
                        "name": "data",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "upload file directory 'dir'",
                        "name": "dir",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/inferences/GetAllDevice": {
            "get": {
                "description": "get all device type detail",
                "produces": [
                    "application/json"
                ],
                "summary": "get all device type detail",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/inferences/GetAllSupportInference": {
            "get": {
                "description": "list inference jobs",
                "produces": [
                    "application/json"
                ],
                "summary": "get all support inference framework\\device",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/inferences/GetJobDetail": {
            "get": {
                "description": "get inference job detail",
                "produces": [
                    "application/json"
                ],
                "summary": "get inference job detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inference job Id ",
                        "name": "jobId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/inferences/GetJobLog": {
            "get": {
                "description": "get inference job log",
                "produces": [
                    "application/json"
                ],
                "summary": "get inference job log",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inference job Id ",
                        "name": "jobId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/inferences/GetJobStatus": {
            "get": {
                "description": "get inference job status",
                "produces": [
                    "application/json"
                ],
                "summary": "get inference job status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inference job Id ",
                        "name": "jobId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/inferences/Infer": {
            "post": {
                "description": "Infer a picture using a running inference job",
                "produces": [
                    "application/json"
                ],
                "summary": "Infer a picture using a running inference job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inference job Id ",
                        "name": "jobId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "picture upload to infer",
                        "name": "image",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/inferences/KillJob": {
            "get": {
                "description": "kill a running inference job",
                "produces": [
                    "application/json"
                ],
                "summary": "kill a running inference job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inference job Id ",
                        "name": "jobId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/inferences/ListInferenceJob": {
            "get": {
                "description": "list inference jobs",
                "produces": [
                    "application/json"
                ],
                "summary": "list inference jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "which virtual cluster",
                        "name": "vcName",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page number, from 1",
                        "name": "pageNum",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/inferences/PostInferenceJob": {
            "post": {
                "description": "submit a inference job",
                "produces": [
                    "application/json"
                ],
                "summary": "submit a inference job",
                "parameters": [
                    {
                        "description": "json body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PostInference"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/models": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "create model",
                "parameters": [
                    {
                        "description": "json body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.createModelsetReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/models/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get model by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "model id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetModelset"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "update model",
                "parameters": [
                    {
                        "type": "string",
                        "description": "model description",
                        "name": "description",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "delete model by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "model id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/models/:id/evaluation": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get evaluation by modelid",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "model id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetModelset"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "create Training",
                "parameters": [
                    {
                        "description": "params",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.CreateEvaluationReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespCreateTraining"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/templates": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get all templates",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "pageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "size per page",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "training module: artsTraining, code module: codeEnv",
                        "name": "jobType",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "public: 1, private: 2",
                        "name": "scope",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetAllTemplate"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "create template",
                "parameters": [
                    {
                        "description": "params",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.CreateTemplateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespCreateTemplate"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/templates/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get specific template",
                "parameters": [
                    {
                        "description": "params",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.GetTemplateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetTemplate"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "delete one template",
                "parameters": [
                    {
                        "description": "params",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.DeleteTemplateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespDeleteTemplate"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/trainings": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get all trainings",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "pageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "size per page",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "job status. get all jobs if it is all",
                        "name": "status",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the keyword of search",
                        "name": "searchWord",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetAllTraining"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "create Training",
                "parameters": [
                    {
                        "description": "params",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.CreateTrainingReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespCreateTraining"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/trainings/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get specific training",
                "parameters": [
                    {
                        "description": "params",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.GetTrainingReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetTraining"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "delete one training",
                "parameters": [
                    {
                        "description": "params",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.DeleteTrainingReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespDeleteTraining"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/trainings/log/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get specific training",
                "parameters": [
                    {
                        "description": "params",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routers.GetTrainingReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetTrainingLog"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/version/env/local": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get local upgrade environment info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routers.getLocalEnvResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/version/info": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get version infomation",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/routers.getVersionInfoResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/version/upgrade/local": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "upgrade through local package",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routers.APISuccessRespGetDataset"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/version/upgradeLog": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get local upgrade log",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routers.getLocalUpgradeLogResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        },
        "/ai_arts/api/version/upgradeProgress": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "get local upgrade process",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routers.getLocalUpgradeProgressResp"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/routers.APIException"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ArgumentsItem": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "models.CodeEnvItem": {
            "type": "object",
            "required": [
                "engine",
                "name",
                "status"
            ],
            "properties": {
                "JupyterUrl": {
                    "type": "string"
                },
                "codePath": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "deviceNum": {
                    "type": "integer"
                },
                "deviceType": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.ConversionJob": {
            "type": "object",
            "properties": {
                "inputPath": {
                    "type": "string"
                },
                "jobId": {
                    "type": "string"
                },
                "jobName": {
                    "type": "string"
                },
                "jobParams": {
                    "type": "object",
                    "$ref": "#/definitions/models.JobParams"
                },
                "jobStatus": {
                    "type": "string"
                },
                "jobTime": {
                    "type": "string"
                },
                "jobType": {
                    "type": "string"
                },
                "modelconversionStatus": {
                    "type": "string"
                },
                "modelconversionType": {
                    "type": "string"
                },
                "outputPath": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                },
                "vcName": {
                    "type": "string"
                }
            }
        },
        "models.ConversionTypes": {
            "type": "object",
            "properties": {
                "conversionTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Dataset": {
            "type": "object",
            "properties": {
                "binds": {
                    "description": "存储绑定信息\nplantform#id*plantform_id",
                    "type": "string"
                },
                "createdAt": {
                    "type": "object",
                    "$ref": "#/definitions/models.UnixTime"
                },
                "creator": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "object",
                    "$ref": "#/definitions/models.UnixTime"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isPrivate": {
                    "description": "是否是公开数据集",
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "object",
                    "$ref": "#/definitions/models.UnixTime"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.DeviceItem": {
            "type": "object",
            "properties": {
                "avail": {
                    "type": "integer"
                },
                "deviceType": {
                    "type": "string"
                }
            }
        },
        "models.EndpointWrapper": {
            "type": "object",
            "properties": {
                "accessPoint": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.FDInfo": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.JobLog": {
            "type": "object",
            "properties": {
                "cursor": {
                    "type": "string"
                },
                "log": {
                    "type": "string"
                }
            }
        },
        "models.JobParams": {
            "type": "object",
            "properties": {
                "cmd": {
                    "type": "string"
                },
                "codePath": {
                    "type": "string"
                },
                "containerUserId": {
                    "type": "integer"
                },
                "datasetPath": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "enabledatapath": {
                    "type": "boolean"
                },
                "enablejobpath": {
                    "type": "boolean"
                },
                "enableworkpath": {
                    "type": "boolean"
                },
                "env": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "familyToken": {
                    "type": "string"
                },
                "gpuType": {
                    "type": "string"
                },
                "hostNetwork": {
                    "type": "boolean"
                },
                "image": {
                    "type": "string"
                },
                "interactivePorts": {
                    "type": "boolean"
                },
                "isParent": {
                    "type": "integer"
                },
                "isPrivileged": {
                    "type": "boolean"
                },
                "jobId": {
                    "type": "string"
                },
                "jobName": {
                    "type": "string"
                },
                "jobPath": {
                    "type": "string"
                },
                "jobType": {
                    "type": "string"
                },
                "jobtrainingtype": {
                    "type": "string"
                },
                "numps": {
                    "type": "integer"
                },
                "numpsworker": {
                    "type": "integer"
                },
                "outputPath": {
                    "type": "string"
                },
                "preemptionAllowed": {
                    "type": "boolean"
                },
                "resourcegpu": {
                    "type": "integer"
                },
                "startupFile": {
                    "type": "string"
                },
                "team": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                },
                "vcName": {
                    "type": "string"
                },
                "workPath": {
                    "type": "string"
                }
            }
        },
        "models.Modelset": {
            "type": "object",
            "properties": {
                "argumentPath": {
                    "description": "模型参数路径",
                    "type": "string"
                },
                "arguments": {
                    "description": "omitempty 值为空，不编码",
                    "type": "object",
                    "$ref": "#/definitions/models.ArgumentsItem"
                },
                "createdAt": {
                    "type": "object",
                    "$ref": "#/definitions/models.UnixTime"
                },
                "creator": {
                    "type": "string"
                },
                "dataFormat": {
                    "type": "string"
                },
                "dataset": {
                    "type": "string"
                },
                "datasetName": {
                    "type": "string"
                },
                "datasetPath": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "object",
                    "$ref": "#/definitions/models.UnixTime"
                },
                "description": {
                    "type": "string"
                },
                "engineType": {
                    "type": "string"
                },
                "evaluationId": {
                    "description": "评估训练任务id",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isAdvance": {
                    "type": "boolean"
                },
                "jobId": {
                    "type": "string"
                },
                "modelPath": {
                    "description": "模型路径",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "outputPath": {
                    "description": "启动文件路径",
                    "type": "string"
                },
                "precision": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "startupFile": {
                    "description": "启动文件路径",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "object",
                    "$ref": "#/definitions/models.UnixTime"
                },
                "use": {
                    "description": "模型类型 图像分类",
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.NodeStatus": {
            "type": "object",
            "properties": {
                "gpuType": {
                    "type": "string"
                },
                "gpu_allocatable": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "gpu_capacity": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                }
            }
        },
        "models.PostInference": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "device": {
                    "type": "string"
                },
                "framework": {
                    "type": "string"
                },
                "gpuType": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "jobName": {
                    "type": "string"
                },
                "model_base_path": {
                    "type": "string"
                },
                "resourcegpu": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "vcName": {
                    "type": "string"
                }
            }
        },
        "models.TemplateItem": {
            "type": "object",
            "properties": {
                "metaData": {
                    "type": "object",
                    "$ref": "#/definitions/models.TemplateMeta"
                },
                "params": {
                    "type": "object",
                    "$ref": "#/definitions/models.TemplateParams"
                }
            }
        },
        "models.TemplateMeta": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "object",
                    "$ref": "#/definitions/models.UnixTime"
                },
                "creator": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "jobType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "object",
                    "$ref": "#/definitions/models.UnixTime"
                }
            }
        },
        "models.TemplateParams": {
            "type": "object",
            "properties": {
                "codePath": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "datasetPath": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "deviceNum": {
                    "type": "integer"
                },
                "deviceType": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "outputPath": {
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "startupFile": {
                    "type": "string"
                }
            }
        },
        "models.Training": {
            "type": "object",
            "properties": {
                "codePath": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "datasetPath": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "deviceNum": {
                    "type": "integer"
                },
                "deviceType": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "jobTrainingType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "numPs": {
                    "type": "integer"
                },
                "numPsWorker": {
                    "type": "integer"
                },
                "outputPath": {
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "startupFile": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.UnixTime": {
            "type": "object"
        },
        "models.VersionInfoSet": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "object",
                    "$ref": "#/definitions/models.UnixTime"
                },
                "creator": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "object",
                    "$ref": "#/definitions/models.UnixTime"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "object",
                    "$ref": "#/definitions/models.UnixTime"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "routers.APIException": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespAllGetCodeEnv": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.GetAllCodeEnvRsp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespCreateCodeEnv": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.CreateCodeEnvRsp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespCreateEdgeInference": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.CreateEdgeInferenceResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespCreateTemplate": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.CreateTemplateRsp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespCreateTraining": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.CreateTrainingRsp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespDeleteCodeEnv": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.DeleteCodeEnvRsp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespDeleteTemplate": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.DeleteTemplateRsp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespDeleteTraining": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.DeleteTrainingRsp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespGetAllTemplate": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.GetAllTemplateRsp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespGetAllTraining": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.GetAllTrainingRsp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespGetCodeEnvJupyter": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/models.EndpointWrapper"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespGetConvTypes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/models.ConversionTypes"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespGetDataset": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.GetDatasetResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespGetDatasets": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.GetDatasetsResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespGetFDInfo": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.GetFDInfoResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespGetModelset": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.GetModelsetResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespGetResource": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.GetResourceRsp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespGetTemplate": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/models.TemplateItem"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespGetTraining": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.GetTrainingRsp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespGetTrainingLog": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/models.JobLog"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.APISuccessRespLsEdgeInferences": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/routers.LsEdgeInferencesResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "routers.CreateCodeEnvReq": {
            "type": "object",
            "required": [
                "engine",
                "name"
            ],
            "properties": {
                "codePath": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "deviceNum": {
                    "type": "integer"
                },
                "deviceType": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "jobTrainingType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "numPs": {
                    "type": "integer"
                },
                "numPsWorker": {
                    "type": "integer"
                }
            }
        },
        "routers.CreateCodeEnvRsp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "routers.CreateEdgeInferenceResp": {
            "type": "object",
            "properties": {
                "jobId": {
                    "type": "string"
                }
            }
        },
        "routers.CreateTemplateReq": {
            "type": "object",
            "properties": {
                "jobType": {
                    "type": "string"
                },
                "scope": {
                    "type": "integer"
                },
                "templateData": {
                    "type": "object",
                    "$ref": "#/definitions/models.TemplateParams"
                }
            }
        },
        "routers.CreateTemplateRsp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "routers.CreateTrainingReq": {
            "type": "object",
            "properties": {
                "codePath": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "datasetPath": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "deviceNum": {
                    "type": "integer"
                },
                "deviceType": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "jobTrainingType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "numPs": {
                    "type": "integer"
                },
                "numPsWorker": {
                    "type": "integer"
                },
                "outputPath": {
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "startupFile": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "routers.CreateTrainingRsp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "routers.DeleteCodeEnvRsp": {
            "type": "object"
        },
        "routers.DeleteTemplateReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "routers.DeleteTemplateRsp": {
            "type": "object"
        },
        "routers.DeleteTrainingReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "routers.DeleteTrainingRsp": {
            "type": "object"
        },
        "routers.GetAllCodeEnvRsp": {
            "type": "object",
            "properties": {
                "CodeEnvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CodeEnvItem"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "routers.GetAllTemplateRsp": {
            "type": "object",
            "properties": {
                "Templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TemplateItem"
                    }
                },
                "total": {
                    "type": "integer"
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "routers.GetAllTrainingRsp": {
            "type": "object",
            "properties": {
                "Trainings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Training"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "routers.GetDatasetResp": {
            "type": "object",
            "properties": {
                "dataset": {
                    "type": "object",
                    "$ref": "#/definitions/models.Dataset"
                }
            }
        },
        "routers.GetDatasetsResp": {
            "type": "object",
            "properties": {
                "datasets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Dataset"
                    }
                },
                "pageNum": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "routers.GetFDInfoResp": {
            "type": "object",
            "properties": {
                "fdinfo": {
                    "type": "object",
                    "$ref": "#/definitions/models.FDInfo"
                }
            }
        },
        "routers.GetJobSummaryReq": {
            "type": "object",
            "properties": {
                "jobType": {
                    "type": "string"
                }
            }
        },
        "routers.GetModelsetResp": {
            "type": "object",
            "properties": {
                "model": {
                    "type": "object",
                    "$ref": "#/definitions/models.Modelset"
                }
            }
        },
        "routers.GetResourceRsp": {
            "type": "object",
            "properties": {
                "aiFrameworks": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "codePathPrefix": {
                    "type": "string"
                },
                "deviceList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DeviceItem"
                    }
                },
                "nodeCountByDeviceType": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "nodeInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NodeStatus"
                    }
                }
            }
        },
        "routers.GetTemplateReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "routers.GetTrainingReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "routers.GetTrainingRsp": {
            "type": "object",
            "properties": {
                "codePath": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "datasetPath": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "deviceNum": {
                    "type": "integer"
                },
                "deviceType": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "jobTrainingType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "numPs": {
                    "type": "integer"
                },
                "numPsWorker": {
                    "type": "integer"
                },
                "outputPath": {
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "startupFile": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "routers.LsEdgeInferencesResp": {
            "type": "object",
            "properties": {
                "edgeInferences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ConversionJob"
                    }
                },
                "pageNum": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "routers.UpdateTemplateReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "jobType": {
                    "type": "string"
                },
                "scope": {
                    "type": "integer"
                },
                "templateData": {
                    "type": "object",
                    "$ref": "#/definitions/models.TemplateParams"
                }
            }
        },
        "routers.createDatasetReq": {
            "type": "object",
            "required": [
                "description",
                "name",
                "path"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "isPrivate": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "routers.createEdgeInferenceReq": {
            "type": "object",
            "required": [
                "conversionType",
                "inputPath",
                "jobName",
                "outputPath"
            ],
            "properties": {
                "conversionType": {
                    "type": "string"
                },
                "inputPath": {
                    "type": "string"
                },
                "jobName": {
                    "type": "string"
                },
                "outputPath": {
                    "type": "string"
                }
            }
        },
        "routers.createModelsetReq": {
            "type": "object",
            "required": [
                "argumentPath",
                "name"
            ],
            "properties": {
                "argumentPath": {
                    "type": "string"
                },
                "arguments": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "dataFormat": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "engineType": {
                    "type": "string"
                },
                "isAdvance": {
                    "type": "boolean"
                },
                "jobId": {
                    "type": "string"
                },
                "modelPath": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "precision": {
                    "type": "string"
                },
                "use": {
                    "type": "string"
                }
            }
        },
        "routers.getLocalEnvResp": {
            "type": "object",
            "properties": {
                "canUpgrade": {
                    "type": "boolean"
                },
                "isLower": {
                    "type": "boolean"
                }
            }
        },
        "routers.getLocalUpgradeLogResp": {
            "type": "object",
            "properties": {
                "logString": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "routers.getLocalUpgradeProgressResp": {
            "type": "object",
            "properties": {
                "percent": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "routers.getVersionInfoResp": {
            "type": "object",
            "properties": {
                "isUpgrading": {
                    "type": "boolean"
                },
                "versionInfo": {
                    "type": "object",
                    "$ref": "#/definitions/models.VersionInfoSet"
                },
                "versionLogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.VersionInfoSet"
                    }
                }
            }
        },
        "routers.setFDInfoReq": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "services.CreateEvaluationReq": {
            "type": "object",
            "properties": {
                "argumentPath": {
                    "type": "string"
                },
                "datasetName": {
                    "type": "string"
                },
                "datasetPath": {
                    "type": "string"
                },
                "deviceNum": {
                    "type": "integer"
                },
                "deviceType": {
                    "type": "string"
                },
                "engineType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "outputPath": {
                    "type": "string"
                },
                "startupFile": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
