definitions:
  routers.APIException:
    properties:
      code:
        type: integer
      msg:
        type: string
    type: object
  routers.APISuccessResp:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
info:
  contact: {}
  license: {}
paths:
  /ai_arts/api/code:
    get:
      parameters:
      - description: page number
        in: query
        name: page
        required: true
        type: integer
      - description: size per page
        in: query
        name: pagesize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/routers.APISuccessResp'
        "400":
          description: error
          schema:
            $ref: '#/definitions/routers.APIException'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/routers.APIException'
      summary: list codesets
  /ai_arts/api/common/resource:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/routers.APISuccessResp'
        "400":
          description: error
          schema:
            $ref: '#/definitions/routers.APIException'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/routers.APIException'
      summary: get available resource
  /ai_arts/api/datasets:
    get:
      parameters:
      - description: page number
        in: query
        name: page
        required: true
        type: integer
      - description: count per page
        in: query
        name: count
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/routers.APISuccessResp'
        "400":
          description: error
          schema:
            $ref: '#/definitions/routers.APIException'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/routers.APIException'
      summary: list datasets
    post:
      parameters:
      - description: dataset name
        in: query
        name: name
        required: true
        type: string
      - description: dataset description
        in: query
        name: description
        required: true
        type: string
      - description: dataset creator
        in: query
        name: creator
        required: true
        type: string
      - description: dataset storage path
        in: query
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/routers.APISuccessResp'
        "400":
          description: error
          schema:
            $ref: '#/definitions/routers.APIException'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/routers.APIException'
      summary: create codeset
  /ai_arts/api/datasets/:id:
    get:
      parameters:
      - description: dataset id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/routers.APISuccessResp'
        "400":
          description: error
          schema:
            $ref: '#/definitions/routers.APIException'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/routers.APIException'
      summary: get dataset by id
    post:
      parameters:
      - description: dataset description
        in: query
        name: description
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/routers.APISuccessResp'
        "400":
          description: error
          schema:
            $ref: '#/definitions/routers.APIException'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/routers.APIException'
      summary: delete codeset
  /api/annotations:
    post:
      parameters:
      - description: Name
        in: query
        name: name
        required: true
        type: string
      - description: State
        in: query
        name: state
        type: integer
      - description: CreatedBy
        in: query
        name: created_by
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: sample
  /api/codes:
    post:
      parameters:
      - description: Name
        in: query
        name: name
        required: true
        type: string
      - description: State
        in: query
        name: state
        type: integer
      - description: CreatedBy
        in: query
        name: created_by
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: sample
  /api/inferences:
    post:
      parameters:
      - description: Name
        in: query
        name: name
        required: true
        type: string
      - description: State
        in: query
        name: state
        type: integer
      - description: CreatedBy
        in: query
        name: created_by
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: sample
  /api/models:
    post:
      parameters:
      - description: Name
        in: query
        name: name
        required: true
        type: string
      - description: State
        in: query
        name: state
        type: integer
      - description: CreatedBy
        in: query
        name: created_by
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: sample
  /api/trainings:
    post:
      parameters:
      - description: Name
        in: query
        name: name
        required: true
        type: string
      - description: State
        in: query
        name: state
        type: integer
      - description: CreatedBy
        in: query
        name: created_by
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: sample
swagger: "2.0"
